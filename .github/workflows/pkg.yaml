# Continuous Delivery (Packaging) pipeline

name: PKG

on:
  push:
    branches: [ "master" ]
    tags: [ '*' ]
  workflow_dispatch: {}

env:
  should_push_image: |-
    ${{
      github.event_name == 'push' && (
        github.ref_type == 'tag' ||
        github.ref_name == 'master'
      )
    }}
  # when tagged commits get pushed, two conatiner are pushed to docker hub ('admin-ui:latest' and 'admin-ui:<tag>' )
  should_tag_latest: |-
    ${{
      github.event_name == 'push' &&
      github.ref_type == 'tag'
    }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Cache docker buildx
        uses: actions/cache@v2
        with:
          path: |
            /home/runner/.docker
            /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}

      - name: Prep build and fill cache # also builds the conatiner when triggered via workflow_dispatch
        run: | 
          docker buildx create --use
          docker buildx build --platform linux/amd64,linux/arm64 -f Dockerfile -t ${GITHUB_REPOSITORY,,}:dev .
        
      - name: Login container registry
        if: fromJSON(env.should_push_image)
        run: |
          echo "${{ secrets.REGISTRY_PASSWORD }}" \
            | docker login -u "${{ secrets.REGISTRY_USER }}" --password-stdin

      - name: Build from cache & Push # if commit is taged, the container name is freed from unwanted chars
        if: fromJSON(env.should_push_image)
        run: |
          safe_ref=$(echo "${{ github.ref_name }}" | sed -e 's/[^a-zA-Z0-9\-\.]/-/g')
          docker buildx build --push --platform linux/amd64,linux/arm64 -f Dockerfile -t ${GITHUB_REPOSITORY,,}:$safe_ref .

      - name: Build from cache & Push latest
        if: fromJSON(env.should_tag_latest)
        run: |
          docker buildx build --push --platform linux/amd64,linux/arm64 -f Dockerfile -t ${GITHUB_REPOSITORY,,}:latest .